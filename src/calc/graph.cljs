(ns calc.graph
  (:require [reagent.core :as r]
            ["katex" :as katex]
            [calc.editor :as editor]
            [sci.core :as sci]
            [calc.math :as math]))

(defn l-nums []
  [:g
   #_[:path {:transform "translate(128,195) scale(0.015, -0.015)"
             :d (nth math/small-nums 1)}]
   #_[:path {:transform "translate(122,195) scale(0.008, -0.015)"
             :d math/minus-sign}]
   [:path {:transform "translate(109,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 2)}]
   [:path {:transform "translate(103,195) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(90,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 3)}]
   [:path {:transform "translate(84,195) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(71,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 4)}]
   [:path {:transform "translate(65,195) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(53,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 5)}]
   [:path {:transform "translate(47,195) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(34,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 6)}]
   [:path {:transform "translate(27,195) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(15,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 7)}]
   [:path {:transform "translate(9,195) scale(0.008, -0.015)"
           :d math/minus-sign}]])

(defn b-nums []
  [:g
   #_[:path {:transform "translate(128,195) scale(0.015, -0.015)"
             :d (nth math/small-nums 1)}]
   #_[:path {:transform "translate(122,195) scale(0.008, -0.015)"
             :d math/minus-sign}]
   [:path {:transform "translate(128,216) scale(0.015, -0.015)"
           :d (nth math/small-nums 2)}]
   [:path {:transform "translate(122,216) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(128,235) scale(0.015, -0.015)"
           :d (nth math/small-nums 3)}]
   [:path {:transform "translate(122,235) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(128,255) scale(0.015, -0.015)"
           :d (nth math/small-nums 4)}]
   [:path {:transform "translate(122,255) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(128,275) scale(0.015, -0.015)"
           :d (nth math/small-nums 5)}]
   [:path {:transform "translate(122,275) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(128,293) scale(0.015, -0.015)"
           :d (nth math/small-nums 6)}]
   [:path {:transform "translate(122,293) scale(0.008, -0.015)"
           :d math/minus-sign}]
   [:path {:transform "translate(128,313) scale(0.015, -0.015)"
           :d (nth math/small-nums 7)}]
   [:path {:transform "translate(122,313) scale(0.008, -0.015)"
           :d math/minus-sign}]])

(defn t-nums []
  [:g
   [:path {:transform "translate(128,161) scale(0.015, -0.015)"
           :d (nth math/small-nums 1)}]
   [:path {:transform "translate(128,141) scale(0.015, -0.015)"
           :d (nth math/small-nums 2)}]
   [:path {:transform "translate(128,123) scale(0.015, -0.015)"
           :d (nth math/small-nums 3)}]
   [:path {:transform "translate(128,105) scale(0.015, -0.015)"
           :d (nth math/small-nums 4)}]
   [:path {:transform "translate(128,87) scale(0.015, -0.015)"
           :d (nth math/small-nums 5)}]
   [:path {:transform "translate(128,68) scale(0.015, -0.015)"
           :d (nth math/small-nums 6)}]
   [:path {:transform "translate(128,49) scale(0.015, -0.015)"
           :d (nth math/small-nums 7)}]
   #_[:path {:transform "translate(128,31) scale(0.015, -0.015)"
             :d (nth math/small-nums 8)}]
   #_[:path {:transform "translate(128,11) scale(0.015, -0.015)"
             :d (nth math/small-nums 9)}]])

(defn r-nums []
  [:g
   [:path {:transform "translate(165,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 1)}]
   [:path {:transform "translate(184,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 2)}]
   [:path {:transform "translate(203,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 3)}]
   [:path {:transform "translate(220,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 4)}]
   [:path {:transform "translate(240,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 5)}]
   [:path {:transform "translate(258,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 6)}]
   [:path {:transform "translate(278,195) scale(0.015, -0.015)"
           :d (nth math/small-nums 7)}]
   #_[:path {:transform "translate(128,195) scale(0.015, -0.015)"
             :d (nth math/small-nums 8)}]
   #_[:path {:transform "translate(128,195) scale(0.015, -0.015)"
             :d (nth math/small-nums 9)}]])

(def grid
  (fn []
    [:path {:d "M0 325V25M18.75 325V25M37.5 325V25M56.25 325V25M75 325V25M93.75 325V25M112.5 325V25M131.25 325V25M150 325V25M168.75 325V25M187.5 325V25M206.25 325V25M225 325V25M243.75 325V25M262.5 325V25M281.25 325V25M300 325V25M0 325h300M0 306.25h300M0 287.5h300M0 268.75h300M0 250h300M0 231.25h300M0 212.5h300M0 193.75h300M0 175h300M0 156.25h300M0 137.5h300M0 118.75h300M0 100h300M0 81.25h300M0 62.5h300M0 43.75h300M0 25h300"
            :stroke "#000"
            :stroke-width 2
            :opacity ".1"}]))

(defn l-arrow []
  [:path {:d "M7.05 169.4c-.35 2.1-4.2 5.25-5.25 5.6 1.05.35 4.9 3.5 5.25 5.6"
          :fill "none"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn l-line []
  [:path {:d "M150 175H1.05"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn r-arrow []
  [:path {:d "M294.45 180.6c.35-2.1 4.2-5.25 5.25-5.6-1.05-.35-4.9-3.5-5.25-5.6"
          :fill "none"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn r-line []
  [:path {:d "M150 175h148.95"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn b-arrow []
  [:path {:d "M145.15 318.7c2.1.35 5.25 4.2 5.6 5.25.35-1.05 3.5-4.9 5.6-5.25"
          :fill "none"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn b-line []
  [:path {:d "M150 175v148.95"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn t-arrow []
  [:path {:d "M156.35 31.3c-2.1-.35-5.25-4.2-5.6-5.25-.35 1.05-3.5 4.9-5.6 5.25"
          :fill "none"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn t-line []
  [:path {:d "M150 175V26.05"
          :stroke "#000"
          :stroke-linejoin "round"
          :stroke-linecap "round"
          :stroke-width 2}])

(defn ticks []
  [:path {:d "M168.75 180v-10M187.5 180v-10M206.25 180v-10M225 180v-10M243.75 180v-10M262.5 180v-10M281.25 180v-10M131.25 180v-10M112.5 180v-10M93.75 180v-10M75 180v-10M56.25 180v-10M37.5 180v-10M18.75 180v-10M145 156.25h10M145 137.5h10M145 118.75h10M145 100h10M145 81.25h10M145 62.5h10M145 43.75h10M145 193.75h10M145 212.5h10M145 231.25h10M145 250h10M145 268.75h10M145 287.5h10M145 306.25h10"
          :stroke "#000"}])

(defn neg-vals []
  [:path {:d "M0 129.25.5 127.504 1 125.785 1.5 124.094 2 122.43 2.5 120.793 3 119.183 3.5 117.6 4 116.043 4.5 114.512 5 113.008 5.5 111.53 6 110.078 6.5 108.651 7 107.25 7.5 105.874 8 104.523 8.5 103.198 9 101.897 9.5 100.621 10 99.369 10.5 98.142 11 96.939 11.5 95.759 12 94.604 12.5 93.472 13 92.364 13.5 91.279 14 90.217 14.5 89.178 15 88.162 15.5 87.168 16 86.198 16.5 85.248 17 84.322 17.5 83.417 18 82.534 18.5 81.673 19 80.833 19.5 80.013 20 79.216 20.5 78.439 21 77.683 21.5 76.948 22 76.233 22.5 75.538 23 74.863 23.5 74.208 24 73.573 24.5 72.957 25 72.361 25.5 71.784 26 71.226 26.5 70.686 27 70.166 27.5 69.664 28 69.181 28.5 68.715 29 68.268 29.5 67.838 30 67.426 30.5 67.031 31 66.654 31.5 66.294 32 65.951 32.5 65.625 33 65.315 33.5 65.022 34 64.746 34.5 64.485 35 64.24 35.5 64.011 36 63.798 36.5 63.6 37 63.417 37.5 63.25 38 63.097 38.5 62.96 39 62.836 39.5 62.728 40 62.633 40.5 62.553 41 62.486 41.5 62.433 42 62.394 42.5 62.368 43 62.356H43.5L44 62.369 44.5 62.395 45 62.434 45.5 62.485 46 62.548 46.5 62.623 47 62.71 47.5 62.81 48 62.92 48.5 63.041 49 63.174 49.5 63.318 50 63.472 50.5 63.638 51 63.813 51.5 63.999 52 64.196 52.5 64.402 53 64.618 53.5 64.844 54 65.079 54.5 65.324 55 65.577 55.5 65.84 56 66.111 56.5 66.391 57 66.679 57.5 66.976 58 67.281 58.5 67.594 59 67.914 59.5 68.243 60 68.578 60.5 68.921 61 69.271 61.5 69.627 62 69.991 62.5 70.361 63 70.738 63.5 71.12 64 71.51 64.5 71.904 65 72.304 65.5 72.71 66 73.122 66.5 73.538 67 73.96 67.5 74.386 68 74.817 68.5 75.253 69 75.693 69.5 76.137 70 76.585 70.5 77.037 71 77.493 71.5 77.952 72 78.415 72.5 78.88 73 79.349 73.5 79.82 74 80.295 74.5 80.771 75 81.25 75.5 81.731 76 82.214 76.5 82.699 77 83.185 77.5 83.673 78 84.163 78.5 84.653 79 85.143 79.5 85.636 80 86.128 80.5 86.621 81 87.114 81.5 87.608 82 88.101 82.5 88.594 83 89.087 83.5 89.579 84 90.069 84.5 90.56 85 91.05 85.5 91.537 86 92.023 86.5 92.508 87 92.991 87.5 93.472 88 93.952 88.5 94.428 89 94.902 89.5 95.373 90 95.842 90.5 96.308 91 96.77 91.5 97.23 92 97.685 92.5 98.137 93 98.585 93.5 99.03 94 99.47 94.5 99.905 95 100.336 95.5 100.763 96 101.184 96.5 101.601 97 102.012 97.5 102.418 98 102.818 98.5 103.213 99 103.602 99.5 103.985 100 104.361 100.5 104.731 101 105.095 101.5 105.452 102 105.801 102.5 106.144 103 106.48 103.5 106.808 104 107.128 104.5 107.441 105 107.746 105.5 108.043 106 108.331 106.5 108.611 107 108.883 107.5 109.145 108 109.399 108.5 109.643 109 109.878 109.5 110.104 110 110.32 110.5 110.526 111 110.723 111.5 110.909 112 111.085 112.5 111.25 113 111.405 113.5 111.548 114 111.681 114.5 111.803 115 111.913 115.5 112.012 116 112.099 116.5 112.174 117 112.237 117.5 112.288 118 112.327 118.5 112.353 119 112.366 119.5 112.367 120 112.354 120.5 112.328 121 112.289 121.5 112.236 122 112.17 122.5 112.089 123 111.995 123.5 111.886 124 111.763 124.5 111.625 125 111.472 125.5 111.305 126 111.122 126.5 110.924 127 110.711 127.5 110.482 128 110.237 128.5 109.977 129 109.7 129.5 109.407 130 109.097 130.5 108.771 131 108.428 131.5 108.068 132 107.691 132.5 107.296 133 106.884 133.5 106.455 134 106.007 134.5 105.542 135 105.058 135.5 104.556 136 104.035 136.5 103.496 137 102.938 137.5 102.361 138 101.765 138.5 101.149 139 100.514 139.5 99.859 140 99.184 140.5 98.489 141 97.774 141.5 97.039 142 96.283 142.5 95.506 143 94.708 143.5 93.89 144 93.05 144.5 92.188 145 91.305 145.5 90.4 146 89.474 146.5 88.524 147 87.554 147.5 86.56 148 85.544 148.5 84.505 149 83.443 149.5 82.358"
          :stroke "#11accd"
          :fill "none"
          :stroke-width 3}])

(defn pos-vals []
  [:path {:d "M150.019 268.708 150.519 267.587 151.019 266.477 151.519 265.375 152.019 264.283 152.519 263.201 153.019 262.127 153.519 261.063 154.019 260.008 154.519 258.962 155.019 257.925 155.519 256.897 156.019 255.877 156.519 254.866 157.019 253.864 157.519 252.871 158.019 251.885 158.519 250.909 159.019 249.94 159.519 248.98 160.019 248.028 160.519 247.084 161.019 246.149 161.519 245.221 162.019 244.301 162.519 243.389 163.019 242.485 163.519 241.589 164.019 240.7 164.519 239.819 165.019 238.945 165.519 238.079 166.019 237.22 166.519 236.368 167.019 235.524 167.519 234.687 168.019 233.857 168.519 233.034 169.019 232.219 169.519 231.41 170.019 230.608 170.519 229.813 171.019 229.025 171.519 228.243 172.019 227.468 172.519 226.7 173.019 225.938 173.519 225.183 174.019 224.435 174.519 223.692 175.019 222.956 175.519 222.227 176.019 221.503 176.519 220.786 177.019 220.075 177.519 219.369 178.019 218.67 178.519 217.977 179.019 217.29 179.519 216.609 180.019 215.933 180.519 215.264 181.019 214.6 181.519 213.941 182.019 213.288 182.519 212.641 183.019 212 183.519 211.364 184.019 210.733 184.519 210.108 185.019 209.488 185.519 208.873 186.019 208.263 186.519 207.659 187.019 207.06 187.519 206.466 188.019 205.877 188.519 205.293 189.019 204.714 189.519 204.141 190.019 203.571 190.519 203.007 191.019 202.448 191.519 201.893 192.019 201.344 192.519 200.798 193.019 200.258 193.519 199.722 194.019 199.191 194.519 198.664 195.019 198.142 195.519 197.624 196.019 197.11 196.519 196.601 197.019 196.097 197.519 195.596 198.019 195.1 198.519 194.608 199.019 194.121 199.519 193.637 200.019 193.158 200.519 192.683 201.019 192.212 201.519 191.744 202.019 191.281 202.519 190.822 203.019 190.367 203.519 189.915 204.019 189.468 204.519 189.024 205.019 188.584 205.519 188.148 206.019 187.715 206.519 187.286 207.019 186.861 207.519 186.44 208.019 186.022 208.519 185.608 209.019 185.197 209.519 184.79 210.019 184.386 210.519 183.985 211.019 183.589 211.519 183.195 212.019 182.805 212.519 182.418 213.019 182.034 213.519 181.654 214.019 181.277 214.519 180.903 215.019 180.533 215.519 180.165 216.019 179.801 216.519 179.44 217.019 179.082 217.519 178.727 218.019 178.374 218.519 178.025 219.019 177.679 219.519 177.336 220.019 176.996 220.519 176.659 221.019 176.325 221.519 175.993 222.019 175.664 222.519 175.338 223.019 175.015 223.519 174.695 224.019 174.377 224.519 174.063 225.019 173.75 225.519 173.441 226.019 173.134 226.519 172.83 227.019 172.528 227.519 172.229 228.019 171.932 228.519 171.638 229.019 171.347 229.519 171.058 230.019 170.771 230.519 170.487 231.019 170.205 231.519 169.926 232.019 169.649 232.519 169.375 233.019 169.103 233.519 168.833 234.019 168.565 234.519 168.3 235.019 168.037 235.519 167.776 236.019 167.518 236.519 167.261 237.019 167.007 237.519 166.755 238.019 166.505 238.519 166.258 239.019 166.012 239.519 165.769 240.019 165.527 240.519 165.288 241.019 165.051 241.519 164.815 242.019 164.582 242.519 164.351 243.019 164.122 243.519 163.894 244.019 163.669 244.519 163.446 245.019 163.224 245.519 163.004 246.019 162.787 246.519 162.571 247.019 162.357 247.519 162.144 248.019 161.934 248.519 161.725 249.019 161.518 249.519 161.313 250.019 161.11 250.519 160.908 251.019 160.708 251.519 160.51 252.019 160.314 252.519 160.119 253.019 159.926 253.519 159.734 254.019 159.545 254.519 159.356 255.019 159.17 255.519 158.985 256.019 158.801 256.519 158.619 257.019 158.439 257.519 158.26 258.019 158.083 258.519 157.907 259.019 157.733 259.519 157.56 260.019 157.389 260.519 157.219 261.019 157.051 261.519 156.884 262.019 156.718 262.519 156.554 263.019 156.391 263.519 156.23 264.019 156.07 264.519 155.912 265.019 155.754 265.519 155.598 266.019 155.444 266.519 155.291 267.019 155.139 267.519 154.988 268.019 154.839 268.519 154.691 269.019 154.544 269.519 154.398 270.019 154.254 270.519 154.111 271.019 153.969 271.519 153.829 272.019 153.689 272.519 153.551 273.019 153.414 273.519 153.278 274.019 153.143 274.519 153.01 275.019 152.877 275.519 152.746 276.019 152.616 276.519 152.487 277.019 152.359 277.519 152.232 278.019 152.106 278.519 151.981 279.019 151.858 279.519 151.735 280.019 151.614 280.519 151.493 281.019 151.374 281.519 151.255 282.019 151.138 282.519 151.021 283.019 150.906 283.519 150.791 284.019 150.678 284.519 150.565 285.019 150.454 285.519 150.343 286.019 150.233 286.519 150.125 287.019 150.017 287.519 149.91 288.019 149.804 288.519 149.699 289.019 149.595 289.519 149.492 290.019 149.389 290.519 149.288 291.019 149.187 291.519 149.087 292.019 148.988 292.519 148.89 293.019 148.793 293.519 148.696 294.019 148.601 294.519 148.506 295.019 148.412 295.519 148.319 296.019 148.227 296.519 148.135 297.019 148.044 297.519 147.954 298.019 147.865 298.519 147.776 299.019 147.689 299.519 147.602"
          :stroke "#11accd"
          :fill "none"
          :stroke-width 3}])

(defn pow [b n]
  (.pow js/Math b n))

(defn close-enough? [x y]
  (> 0.05 (.abs js/Math (- x y))))

(defn log
  ([n]
   (log 10 n))
  ([b n]
   (first (filter #(close-enough? n (.pow js/Math b %))
                  (range -100 100 0.003)))))

(def e (.-E js/Math))

(defn ln [x]
  (log e x))

(defn lg [x]
  (log 2 x))

(defn bell [x]
  (pow e (- (* x x))))

(defonce function-atom
  (r/atom (fn bell-curve [x]
            (js/Math.pow
             js/Math.E
             (- (* x x))))))

(defonce range-start (r/atom -8))

(def my-data
  (for [x (range @range-start 8 0.1)]
    [x ((deref function-atom) x)]))

(def view-box-width 300)
(def view-box-height 326)

(defn x-point [x]
  (+ 150 (* x 18.75)))

(defn y-point [y]
  (- 175 (* y 18.75)))

(defn make-path [points]
  (str "M" (apply str (interpose " " (for [[x y] points]
                                       (str (x-point x) " " (y-point y)))))))

(make-path my-data)
; origin (0, 0) is 150, 175
; x-min (-8) is 0
; x-max (8) is 300
; y-min is 325
; y-max is 26

(/ 300 8)
(* -8 37.5)

(x-point -8)
(x-point 0)
(x-point 8)
(x-point 0)
(y-point 0)
(y-point 8)
(/ 268 5)
(/ 53.6 2)

(defn my-vals []
  [:path {:d (make-path my-data)
          :stroke "red"
          :fill "none"
          :stroke-width 3}])

(defn closed-point []
  [:ellipse {:cx "150" :cy "81.25" :rx "4" :ry "4" :fill "#11accd" :stroke "#11accd" :stroke-width "2" :stroke-dasharray "0"}])

(defn open-point []
  [:ellipse {:cx "150" :cy "268.329" :rx "4" :ry "4" :fill "#fff" :stroke "#11accd" :stroke-width "2" :stroke-dasharray "0"}])

(defn tex [text]
    [:span {:ref (fn [el]
                   (when el
                     (try
                       (katex/render text el (clj->js
                                              {:throwOnError false}))
                       (catch :default e
                         (js/console.warn "Unexpected KaTeX error" e)
                         (aset el "innerHTML" text)))))}])

(defn calc-graph []
  (fn []
    (let [vals (fn [] [:path {:d (make-path (for [x (range @range-start 8 0.1)]
                                              [x (#(@function-atom %) x)]))
                              :stroke "blue"
                              :fill "none"
                              :stroke-width 3}])]
      [:svg {:width    "100%"
             :view-box (str "0 24 " view-box-width " " view-box-height)}
       [:g
        [grid]
        [l-arrow]
        [l-line]
        [r-arrow]
        [r-line]
        [b-arrow]
        [b-line]
        [t-arrow]
        [t-line]
        [ticks]
        [vals]
        [l-nums]
        [b-nums]
        [t-nums]
        [r-nums]]])))

(defonce code (r/atom "(fn bell-curve [x]
  (js/Math.pow
      js/Math.E
      (- (* x x))))"))
(defonce !editor-view (r/atom nil))

(defn get-editor-value []
  (some-> @!editor-view .-state .-doc str))

(defn eval-all [s]
  (try (sci/eval-string s {:classes {'js goog/global :allow :all}})
       (catch :default e
         (str e))))

(defn function-input []
    [:div
     [:h3
      (tex "f") [:span ":"]]
     [editor/editor @code !editor-view {:eval? true}]
     [:span
      [:button {:on-click #(when (number? (eval-all (str "(" (get-editor-value) " " 1 ")")))
                             (reset! function-atom (eval-all (get-editor-value))))
                :style {:margin-top "1rem"}}
       (tex "f(x)")]]])